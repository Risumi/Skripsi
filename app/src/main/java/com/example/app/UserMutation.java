package com.example.app;// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//

import com.apollographql.apollo.api.Input;
import com.apollographql.apollo.api.InputFieldMarshaller;
import com.apollographql.apollo.api.InputFieldWriter;
import com.apollographql.apollo.api.Mutation;
import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ResponseFieldMapper;
import com.apollographql.apollo.api.ResponseFieldMarshaller;
import com.apollographql.apollo.api.ResponseReader;
import com.apollographql.apollo.api.ResponseWriter;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.io.IOException;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;

public final class UserMutation implements Mutation<UserMutation.Data, UserMutation.Data, UserMutation.Variables> {
  public static final String OPERATION_ID = "df6f44f7e6f07a10229462a2b674ef578b11377c1d89c2f7d22ccb726e6a85a4";

  public static final String QUERY_DOCUMENT = "mutation User($nama: String!, $email: String!, $password: String!, $role: String) {\n"
      + "  createUser(nama: $nama, email: $email, password: $password, role: $role) {\n"
      + "    __typename\n"
      + "    nama\n"
      + "    email\n"
      + "    password\n"
      + "    role\n"
      + "  }\n"
      + "}";

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "User";
    }
  };

  private final UserMutation.Variables variables;

  public UserMutation(@NotNull String nama, @NotNull String email, @NotNull String password,
      @NotNull Input<String> role) {
    Utils.checkNotNull(nama, "nama == null");
    Utils.checkNotNull(email, "email == null");
    Utils.checkNotNull(password, "password == null");
    Utils.checkNotNull(role, "role == null");
    variables = new UserMutation.Variables(nama, email, password, role);
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public UserMutation.Data wrapData(UserMutation.Data data) {
    return data;
  }

  @Override
  public UserMutation.Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  public static final class Builder {
    private @NotNull String nama;

    private @NotNull String email;

    private @NotNull String password;

    private Input<String> role = Input.absent();

    Builder() {
    }

    public Builder nama(@NotNull String nama) {
      this.nama = nama;
      return this;
    }

    public Builder email(@NotNull String email) {
      this.email = email;
      return this;
    }

    public Builder password(@NotNull String password) {
      this.password = password;
      return this;
    }

    public Builder role(@Nullable String role) {
      this.role = Input.fromNullable(role);
      return this;
    }

    public Builder roleInput(@NotNull Input<String> role) {
      this.role = Utils.checkNotNull(role, "role == null");
      return this;
    }

    public UserMutation build() {
      Utils.checkNotNull(nama, "nama == null");
      Utils.checkNotNull(email, "email == null");
      Utils.checkNotNull(password, "password == null");
      return new UserMutation(nama, email, password, role);
    }
  }

  public static final class Variables extends Operation.Variables {
    private final @NotNull String nama;

    private final @NotNull String email;

    private final @NotNull String password;

    private final Input<String> role;

    private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

    Variables(@NotNull String nama, @NotNull String email, @NotNull String password,
        Input<String> role) {
      this.nama = nama;
      this.email = email;
      this.password = password;
      this.role = role;
      this.valueMap.put("nama", nama);
      this.valueMap.put("email", email);
      this.valueMap.put("password", password);
      if (role.defined) {
        this.valueMap.put("role", role.value);
      }
    }

    public @NotNull String nama() {
      return nama;
    }

    public @NotNull String email() {
      return email;
    }

    public @NotNull String password() {
      return password;
    }

    public Input<String> role() {
      return role;
    }

    @Override
    public Map<String, Object> valueMap() {
      return Collections.unmodifiableMap(valueMap);
    }

    @Override
    public InputFieldMarshaller marshaller() {
      return new InputFieldMarshaller() {
        @Override
        public void marshal(InputFieldWriter writer) throws IOException {
          writer.writeString("nama", nama);
          writer.writeString("email", email);
          writer.writeString("password", password);
          if (role.defined) {
            writer.writeString("role", role.value);
          }
        }
      };
    }
  }

  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forObject("createUser", "createUser", new UnmodifiableMapBuilder<String, Object>(4)
      .put("nama", new UnmodifiableMapBuilder<String, Object>(2)
        .put("kind", "Variable")
        .put("variableName", "nama")
        .build())
      .put("email", new UnmodifiableMapBuilder<String, Object>(2)
        .put("kind", "Variable")
        .put("variableName", "email")
        .build())
      .put("password", new UnmodifiableMapBuilder<String, Object>(2)
        .put("kind", "Variable")
        .put("variableName", "password")
        .build())
      .put("role", new UnmodifiableMapBuilder<String, Object>(2)
        .put("kind", "Variable")
        .put("variableName", "role")
        .build())
      .build(), true, Collections.<ResponseField.Condition>emptyList())
    };

    final @Nullable CreateUser createUser;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@Nullable CreateUser createUser) {
      this.createUser = createUser;
    }

    public @Nullable CreateUser createUser() {
      return this.createUser;
    }

    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeObject($responseFields[0], createUser != null ? createUser.marshaller() : null);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "createUser=" + createUser
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.createUser == null) ? (that.createUser == null) : this.createUser.equals(that.createUser));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (createUser == null) ? 0 : createUser.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final CreateUser.Mapper createUserFieldMapper = new CreateUser.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final CreateUser createUser = reader.readObject($responseFields[0], new ResponseReader.ObjectReader<CreateUser>() {
          @Override
          public CreateUser read(ResponseReader reader) {
            return createUserFieldMapper.map(reader);
          }
        });
        return new Data(createUser);
      }
    }
  }

  public static class CreateUser {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("nama", "nama", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("email", "email", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("password", "password", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("role", "role", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @Nullable String nama;

    final @Nullable String email;

    final @Nullable String password;

    final @Nullable String role;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public CreateUser(@NotNull String __typename, @Nullable String nama, @Nullable String email,
        @Nullable String password, @Nullable String role) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.nama = nama;
      this.email = email;
      this.password = password;
      this.role = role;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public @Nullable String nama() {
      return this.nama;
    }

    public @Nullable String email() {
      return this.email;
    }

    public @Nullable String password() {
      return this.password;
    }

    public @Nullable String role() {
      return this.role;
    }

    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], nama);
          writer.writeString($responseFields[2], email);
          writer.writeString($responseFields[3], password);
          writer.writeString($responseFields[4], role);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "CreateUser{"
          + "__typename=" + __typename + ", "
          + "nama=" + nama + ", "
          + "email=" + email + ", "
          + "password=" + password + ", "
          + "role=" + role
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof CreateUser) {
        CreateUser that = (CreateUser) o;
        return this.__typename.equals(that.__typename)
         && ((this.nama == null) ? (that.nama == null) : this.nama.equals(that.nama))
         && ((this.email == null) ? (that.email == null) : this.email.equals(that.email))
         && ((this.password == null) ? (that.password == null) : this.password.equals(that.password))
         && ((this.role == null) ? (that.role == null) : this.role.equals(that.role));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= (nama == null) ? 0 : nama.hashCode();
        h *= 1000003;
        h ^= (email == null) ? 0 : email.hashCode();
        h *= 1000003;
        h ^= (password == null) ? 0 : password.hashCode();
        h *= 1000003;
        h ^= (role == null) ? 0 : role.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<CreateUser> {
      @Override
      public CreateUser map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String nama = reader.readString($responseFields[1]);
        final String email = reader.readString($responseFields[2]);
        final String password = reader.readString($responseFields[3]);
        final String role = reader.readString($responseFields[4]);
        return new CreateUser(__typename, nama, email, password, role);
      }
    }
  }
}
