package com.example.app;// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//

import com.apollographql.apollo.api.InputFieldMarshaller;
import com.apollographql.apollo.api.InputFieldWriter;
import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ResponseFieldMapper;
import com.apollographql.apollo.api.ResponseFieldMarshaller;
import com.apollographql.apollo.api.ResponseReader;
import com.apollographql.apollo.api.ResponseWriter;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.io.IOException;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public final class UserProjectQuery implements Query<UserProjectQuery.Data, UserProjectQuery.Data, UserProjectQuery.Variables> {
  public static final String OPERATION_ID = "435d3c02eb517c18d61fd401a359b258b1e7facab691676ad870ca166fc70438";

  public static final String QUERY_DOCUMENT = "query UserProject($id: String!) {\n"
      + "  userproject(id: $id) {\n"
      + "    __typename\n"
      + "    email {\n"
      + "      __typename\n"
      + "      email\n"
      + "      nama\n"
      + "    }\n"
      + "  }\n"
      + "}";

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "UserProject";
    }
  };

  private final UserProjectQuery.Variables variables;

  public UserProjectQuery(@NotNull String id) {
    Utils.checkNotNull(id, "id == null");
    variables = new UserProjectQuery.Variables(id);
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public UserProjectQuery.Data wrapData(UserProjectQuery.Data data) {
    return data;
  }

  @Override
  public UserProjectQuery.Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  public static final class Builder {
    private @NotNull String id;

    Builder() {
    }

    public Builder id(@NotNull String id) {
      this.id = id;
      return this;
    }

    public UserProjectQuery build() {
      Utils.checkNotNull(id, "id == null");
      return new UserProjectQuery(id);
    }
  }

  public static final class Variables extends Operation.Variables {
    private final @NotNull String id;

    private final transient Map<String, Object> valueMap = new LinkedHashMap<>();

    Variables(@NotNull String id) {
      this.id = id;
      this.valueMap.put("id", id);
    }

    public @NotNull String id() {
      return id;
    }

    @Override
    public Map<String, Object> valueMap() {
      return Collections.unmodifiableMap(valueMap);
    }

    @Override
    public InputFieldMarshaller marshaller() {
      return new InputFieldMarshaller() {
        @Override
        public void marshal(InputFieldWriter writer) throws IOException {
          writer.writeString("id", id);
        }
      };
    }
  }

  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forList("userproject", "userproject", new UnmodifiableMapBuilder<String, Object>(1)
      .put("id", new UnmodifiableMapBuilder<String, Object>(2)
        .put("kind", "Variable")
        .put("variableName", "id")
        .build())
      .build(), true, Collections.<ResponseField.Condition>emptyList())
    };

    final @Nullable List<Userproject> userproject;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@Nullable List<Userproject> userproject) {
      this.userproject = userproject;
    }

    public @Nullable List<Userproject> userproject() {
      return this.userproject;
    }

    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeList($responseFields[0], userproject, new ResponseWriter.ListWriter() {
            @Override
            public void write(List items, ResponseWriter.ListItemWriter listItemWriter) {
              for (Object item : items) {
                listItemWriter.writeObject(((Userproject) item).marshaller());
              }
            }
          });
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "userproject=" + userproject
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.userproject == null) ? (that.userproject == null) : this.userproject.equals(that.userproject));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (userproject == null) ? 0 : userproject.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final Userproject.Mapper userprojectFieldMapper = new Userproject.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final List<Userproject> userproject = reader.readList($responseFields[0], new ResponseReader.ListReader<Userproject>() {
          @Override
          public Userproject read(ResponseReader.ListItemReader listItemReader) {
            return listItemReader.readObject(new ResponseReader.ObjectReader<Userproject>() {
              @Override
              public Userproject read(ResponseReader reader) {
                return userprojectFieldMapper.map(reader);
              }
            });
          }
        });
        return new Data(userproject);
      }
    }
  }

  public static class Userproject {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forObject("email", "email", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @Nullable Email email;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Userproject(@NotNull String __typename, @Nullable Email email) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.email = email;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public @Nullable Email email() {
      return this.email;
    }

    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeObject($responseFields[1], email != null ? email.marshaller() : null);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Userproject{"
          + "__typename=" + __typename + ", "
          + "email=" + email
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Userproject) {
        Userproject that = (Userproject) o;
        return this.__typename.equals(that.__typename)
         && ((this.email == null) ? (that.email == null) : this.email.equals(that.email));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= (email == null) ? 0 : email.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Userproject> {
      final Email.Mapper emailFieldMapper = new Email.Mapper();

      @Override
      public Userproject map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final Email email = reader.readObject($responseFields[1], new ResponseReader.ObjectReader<Email>() {
          @Override
          public Email read(ResponseReader reader) {
            return emailFieldMapper.map(reader);
          }
        });
        return new Userproject(__typename, email);
      }
    }
  }

  public static class Email {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("email", "email", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("nama", "nama", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @NotNull String email;

    final @Nullable String nama;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Email(@NotNull String __typename, @NotNull String email, @Nullable String nama) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.email = Utils.checkNotNull(email, "email == null");
      this.nama = nama;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    public @NotNull String email() {
      return this.email;
    }

    public @Nullable String nama() {
      return this.nama;
    }

    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], email);
          writer.writeString($responseFields[2], nama);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Email{"
          + "__typename=" + __typename + ", "
          + "email=" + email + ", "
          + "nama=" + nama
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Email) {
        Email that = (Email) o;
        return this.__typename.equals(that.__typename)
         && this.email.equals(that.email)
         && ((this.nama == null) ? (that.nama == null) : this.nama.equals(that.nama));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= email.hashCode();
        h *= 1000003;
        h ^= (nama == null) ? 0 : nama.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Email> {
      @Override
      public Email map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String email = reader.readString($responseFields[1]);
        final String nama = reader.readString($responseFields[2]);
        return new Email(__typename, email, nama);
      }
    }
  }
}
